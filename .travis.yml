#
# .travis.yml  travis ci config for prebuild-cache.sh
# 22-Jan-2017  chuck@ece.cmu.edu
#

# disable sudo, causes us to build in a container environment
sudo: false

# setup for a c/c++ based project
language: cpp

# additional packages.  gmp/mpfr/mpc are for building gcc.
addons:
  apt:
    packages:
      - automake
      - libboost-dev
      - libgmp-dev
      - libmpfr-dev
      - libmpc-dev

# cache directory persists between runs (prebuild stuff here, like gcc, cmake, mpich)
cache:
  directories:
    - $HOME/cache

# define build matrix using os/compiler/env
os:
- linux
- osx

compiler:
- clang
- gcc

env:
  global:
    - XCMAKE=${HOME}/cache/bin/cmake

# the default matrix is (os) x (compiler) x (env-matrix), but we can exclude
# rows if we want to

#
# git related config (restrict to master and zap submodules)
branches:
  only:
    - master

git:
  submodules: false

#
# note: before_install, install, before_script, script all get combined
# into one shell script that runs on the travis node.  e.g. changing
# an environment variable in before_install will impact the install
# and everything else that comes after it.
#

# before_install: add all depends, including the ones that go in the cache
before_install:
  - echo "Before install"
  - echo "Home directory is ${HOME}"
  - echo "Contents of ${HOME}"
  - ls -a ${HOME}
  - export PATH=${HOME}/cache/bin:${PATH}
  - >
    if [ x${TRAVIS_OS_NAME} = xlinux -a x${CC} = xgcc ]; then
        echo "Adding extra envs for custom gcc environment"
        export PATH=${HOME}/cache/gcc/bin:${PATH}
        gcclib=${HOME}/cache/gcc
        export LD_LIBRARY_PATH=${gcclib}/lib:${gcclib}/lib64:${LD_LIBRARY_PATH}
    fi
  - echo "Environment"
  - printenv

# install: build our code and do a test install
install:
  - echo "Install"

# before_script: anything to do before starting test
before_script:
  - echo "Before Script"

# script: run the test itself
script:
  - ./prebuild-cache.sh

